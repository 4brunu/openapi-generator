//
// Pet.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

@objc public class Pet: NSObject, Codable {

    public enum Status: Int, Codable, CaseIterable {
        case available
        case pending
        case sold

        func value() -> String {
            switch self {
                case .available: return "available"
                case .pending: return "pending"
                case .sold: return "sold"
            }
        }

        static func fromValue(value: String) -> Status? {
            if  value == "available" { return .available } else if  value == "pending" { return .pending } else if  value == "sold" { return .sold }
            return nil
        }
    }
        /** DEBUG - !required|!isNullable|vendorExtensions.x-swift-optional-scalar */
    public var _id: Int64?
    @objc public var _idNum: NSNumber? {
        get {
            return _id as? NSNumber
        }
    }
        /** DEBUG - !required|!isNullable|!vendorExtensions.x-swift-optional-scalar */
    @objc public var category: Category?
        /** DEBUG - required|!isNullable|!vendorExtensions.x-swift-optional-scalar */
    @objc public var name: String
        /** DEBUG - required|!isNullable|!vendorExtensions.x-swift-optional-scalar */
    @objc public var photoUrls: [String]
        /** DEBUG - !required|!isNullable|!vendorExtensions.x-swift-optional-scalar */
    @objc public var tags: [Tag]?
    /** pet status in the store */
    public var status: Status?

    public init(_id: Int64?, category: Category?, name: String, photoUrls: [String], tags: [Tag]?, status: Status?) {
        self._id = _id
        self.category = category
        self.name = name
        self.photoUrls = photoUrls
        self.tags = tags
        self.status = status
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case _id = "id"
        case category
        case name
        case photoUrls
        case tags
        case status
    }

}
