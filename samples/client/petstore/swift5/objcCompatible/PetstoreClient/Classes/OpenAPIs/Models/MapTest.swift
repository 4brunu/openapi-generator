//
// MapTest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

@objc public class MapTest: NSObject, Codable {

    public enum MapOfEnumString: Int, Codable, CaseIterable {
        case upper
        case lower

        func value() -> String {
            switch self {
                case .upper: return "UPPER"
                case .lower: return "lower"
            }
        }

        static func fromValue(value: String) -> MapOfEnumString? {
            if  value == "UPPER" { return .upper } else if  value == "lower" { return .lower }
            return nil
        }
    }
        /** DEBUG - !required|!isNullable|!vendorExtensions.x-swift-optional-scalar */
    @objc public var mapMapOfString: [String: [String: String]]?
    public var mapOfEnumString: [String: String]?
        /** DEBUG - !required|!isNullable|!vendorExtensions.x-swift-optional-scalar */
    @objc public var directMap: [String: Bool]?
        /** DEBUG - !required|!isNullable|!vendorExtensions.x-swift-optional-scalar */
    @objc public var indirectMap: StringBooleanMap?

    public init(mapMapOfString: [String: [String: String]]?, mapOfEnumString: [String: String]?, directMap: [String: Bool]?, indirectMap: StringBooleanMap?) {
        self.mapMapOfString = mapMapOfString
        self.mapOfEnumString = mapOfEnumString
        self.directMap = directMap
        self.indirectMap = indirectMap
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case mapMapOfString
        case mapOfEnumString
        case directMap
        case indirectMap
    }

}
