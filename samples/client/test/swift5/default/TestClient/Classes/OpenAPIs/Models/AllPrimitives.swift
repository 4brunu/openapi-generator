//
// AllPrimitives.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/** Object which contains lots of different primitive OpenAPI types */
public struct AllPrimitives: Codable {

    public enum MyInlineStringEnum: String, Codable, CaseIterable {
        case inlinestringenumvalue1 = "inlineStringEnumValue1"
        case inlinestringenumvalue2 = "inlineStringEnumValue2"
        case inlinestringenumvalue3 = "inlineStringEnumValue3"
    }
        /** DEBUG - !required|!isNullable|vendorExtensions.x-swift-optional-scalar */
    public var myInteger: Int?
        /** DEBUG - !required|!isNullable|!vendorExtensions.x-swift-optional-scalar */
    public var myIntegerArray: [Int]?
        /** DEBUG - !required|!isNullable|vendorExtensions.x-swift-optional-scalar */
    public var myLong: Int64?
        /** DEBUG - !required|!isNullable|!vendorExtensions.x-swift-optional-scalar */
    public var myLongArray: [Int64]?
        /** DEBUG - !required|!isNullable|vendorExtensions.x-swift-optional-scalar */
    public var myFloat: Float?
        /** DEBUG - !required|!isNullable|!vendorExtensions.x-swift-optional-scalar */
    public var myFloatArray: [Float]?
        /** DEBUG - !required|!isNullable|vendorExtensions.x-swift-optional-scalar */
    public var myDouble: Double?
        /** DEBUG - !required|!isNullable|!vendorExtensions.x-swift-optional-scalar */
    public var myDoubleArray: [Double]?
        /** DEBUG - !required|!isNullable|!vendorExtensions.x-swift-optional-scalar */
    public var myString: String?
        /** DEBUG - !required|!isNullable|!vendorExtensions.x-swift-optional-scalar */
    public var myStringArray: [String]?
        /** DEBUG - !required|!isNullable|!vendorExtensions.x-swift-optional-scalar */
    public var myBytes: Data?
        /** DEBUG - !required|!isNullable|!vendorExtensions.x-swift-optional-scalar */
    public var myBytesArray: [Data]?
        /** DEBUG - !required|!isNullable|vendorExtensions.x-swift-optional-scalar */
    public var myBoolean: Bool?
        /** DEBUG - !required|!isNullable|!vendorExtensions.x-swift-optional-scalar */
    public var myBooleanArray: [Bool]?
        /** DEBUG - !required|!isNullable|!vendorExtensions.x-swift-optional-scalar */
    public var myDate: Date?
        /** DEBUG - !required|!isNullable|!vendorExtensions.x-swift-optional-scalar */
    public var myDateArray: [Date]?
        /** DEBUG - !required|!isNullable|!vendorExtensions.x-swift-optional-scalar */
    public var myDateTime: Date?
        /** DEBUG - !required|!isNullable|!vendorExtensions.x-swift-optional-scalar */
    public var myDateTimeArray: [Date]?
        /** DEBUG - !required|!isNullable|!vendorExtensions.x-swift-optional-scalar */
    public var myFile: URL?
        /** DEBUG - !required|!isNullable|!vendorExtensions.x-swift-optional-scalar */
    public var myFileArray: [URL]?
        /** DEBUG - !required|!isNullable|!vendorExtensions.x-swift-optional-scalar */
    public var myUUID: UUID?
        /** DEBUG - !required|!isNullable|!vendorExtensions.x-swift-optional-scalar */
    public var myUUIDArray: [UUID]?
        /** DEBUG - !required|!isNullable|!vendorExtensions.x-swift-optional-scalar */
    public var myStringEnum: StringEnum?
        /** DEBUG - !required|!isNullable|!vendorExtensions.x-swift-optional-scalar */
    public var myStringEnumArray: [StringEnum]?
    public var myInlineStringEnum: MyInlineStringEnum?

    public init(myInteger: Int?, myIntegerArray: [Int]?, myLong: Int64?, myLongArray: [Int64]?, myFloat: Float?, myFloatArray: [Float]?, myDouble: Double?, myDoubleArray: [Double]?, myString: String?, myStringArray: [String]?, myBytes: Data?, myBytesArray: [Data]?, myBoolean: Bool?, myBooleanArray: [Bool]?, myDate: Date?, myDateArray: [Date]?, myDateTime: Date?, myDateTimeArray: [Date]?, myFile: URL?, myFileArray: [URL]?, myUUID: UUID?, myUUIDArray: [UUID]?, myStringEnum: StringEnum?, myStringEnumArray: [StringEnum]?, myInlineStringEnum: MyInlineStringEnum?) {
        self.myInteger = myInteger
        self.myIntegerArray = myIntegerArray
        self.myLong = myLong
        self.myLongArray = myLongArray
        self.myFloat = myFloat
        self.myFloatArray = myFloatArray
        self.myDouble = myDouble
        self.myDoubleArray = myDoubleArray
        self.myString = myString
        self.myStringArray = myStringArray
        self.myBytes = myBytes
        self.myBytesArray = myBytesArray
        self.myBoolean = myBoolean
        self.myBooleanArray = myBooleanArray
        self.myDate = myDate
        self.myDateArray = myDateArray
        self.myDateTime = myDateTime
        self.myDateTimeArray = myDateTimeArray
        self.myFile = myFile
        self.myFileArray = myFileArray
        self.myUUID = myUUID
        self.myUUIDArray = myUUIDArray
        self.myStringEnum = myStringEnum
        self.myStringEnumArray = myStringEnumArray
        self.myInlineStringEnum = myInlineStringEnum
    }

}
